name: Coverage

on:
  push:
    branches: ["main"]

env:
  DATABASE_HOST: ${{ vars.DATABASE_HOST }}
  DATABASE_PORT: ${{ vars.DATABASE_PORT }}
  DATABASE_NAME: ${{ vars.DATABASE_NAME }}
  DATABASE_USER: ${{ vars.DATABASE_USER }}
  DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Scala
        uses: olafurpg/setup-scala@v14
        with:
          java-version: openjdk@1.11.0-2

      - name: Set up docker environment
        run: docker-compose -f docker-compose.testing.yaml up -d

      - name: Clean and test
        run: sbt -DDATABASE_HOST=$DATABASE_HOST -DDATABASE_PORT=$DATABASE_PORT -DDATABASE_NAME=$DATABASE_NAME -DDATABASE_USER=$DATABASE_USER -DDATABASE_PASSWORD=$DATABASE_PASSWORD clean coverage test coverageReport

      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./target/scala-2.13/coverage-report/cobertura.xml
          fail_ci_if_error: true

      - name: Clean docker environment
        run: docker-compose -f docker-compose.testing.yaml down --rmi all -v --remove-orphans